/******************************************************************************
 * [Filename]:      {{filename}}
 * [Project]:       CANopen
 * [Author]:        Tristan Lieberherr
 * [Date]:          Generated on {{date.strftime("%B %-d, %Y")}}
 * [Description]:   This file contains the declaration of the ObjectDictionnary class.
 *                  It is auto-generated from the device's EDS file, so manually editing is not recommended.
 *****************************************************************************/
#pragma once
#include "od_include.hpp"
#define OD_OBJECTS_COUNT {{objects|length}}
#define OD_GRANULARITY 8
#define OD_PDO_MAPPING_MAX 8
{% for define in defines %}
#define {{define}}
{% endfor %}

namespace {{namespace}}
{
    class ObjectDictionnary
    {
    private:
        struct ObjectDictionnaryData
        {
            {% for object in objects %}
            {% for data in object.renderData() %}
            {{data}};
            {% endfor %}
            {% endfor %}
        };
        struct 
        {
            struct
            {
                ObjectDictionnaryData data;
                {% for object in objects %}
                {% for entry in object.renderEntry() %}
                {{entry}};
                {% endfor %}
                {{object.renderEntryList()}};
                {% endfor %}
            } entries;
            {% for object in objects %}
            {{object.renderObject()}};
            {% endfor %}
        } objects;
        Object *objectsArray[OD_OBJECTS_COUNT] = {&objects.{{objectNames|join(', &objects.')}}};
        class Node &node;

    public:
        const uint16_t length = OD_OBJECTS_COUNT;

        ObjectDictionnary(class Node &node);
        Object *findObject(uint16_t index);
        Object *at(uint16_t index);
        Object *operator[](uint16_t index);
        bool saveData(uint8_t parameterGroup);
        bool loadData(uint8_t parameterGroup);
        bool restoreData(uint8_t parameterGroup);
    };
}
